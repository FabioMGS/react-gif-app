{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","category","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGif","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","setTimeout","useFetchGifs","key","GifApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAc9C,OACI,0BAAMC,SAPW,SAACC,GAClBA,EAAEC,iBACFN,GAAe,SAAAO,GAAQ,OAAKL,GAAL,mBAAoBK,OAC3CJ,EAAc,MAKV,2BACIK,KAAK,OACLC,MAAQP,EACRQ,SAfc,SAACL,GACvBF,EAAcE,EAAEM,OAAOF,YCNlBG,EAAc,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACjC,OACI,yBAAKC,UAAU,0CACX,yBAAKC,IAAMF,EAAMG,IAAMJ,IACvB,2BAAKA,K,uBCNJK,EAAM,uCAAG,WAAQX,GAAR,uBAAAY,EAAA,6DACZL,EADY,0FAC8EM,UAAUb,GADxF,sBAGCc,MAAOP,GAHR,cAGZQ,EAHY,gBAIKA,EAAKC,OAJV,uBAIVC,EAJU,EAIVA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAQD,EAAIC,GACZf,MAAQc,EAAId,MACZC,IAAG,UAAKa,EAAIE,cAAT,aAAK,EAAYC,iBAAiBhB,QAV3B,kBAcXW,GAdW,4CAAH,sDCMNM,EAAU,SAAC,GAAkB,IAAhBxB,EAAe,EAAfA,SAAe,ECHb,SAAEA,GAAe,IAAD,EAEdN,mBAAS,CAC/BuB,KAAM,GACNQ,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAqBxC,OAdAC,qBAAU,WACNjB,EAAOX,GACF6B,MAAM,SAAAT,GAEHU,YAAY,WACRH,EAAS,CACLV,KAAMG,EACNK,SAAS,MAEd,WAGZ,CAACzB,IAEG0B,EDf0BK,CAAa/B,GAAjCsB,EAHwB,EAG7BL,KAAaQ,EAHgB,EAGhBA,QAUrB,OACI,oCACI,wBAAIjB,UAAU,qCAAsCR,GAClDyB,GAAW,uBAAGjB,UAAU,oCAAb,eACb,yBAAKA,UAAU,aAEPc,EAAOH,KAAK,SAAAC,GACR,OAAO,kBAAC,EAAD,eAAaY,IAAMZ,EAAIC,IACLD,UEvBpCa,EAAS,WAAO,IAAD,EAEYvC,mBAAS,CAAC,gBAFtB,mBAEjBwC,EAFiB,KAELzC,EAFK,KAIxB,OACI,oCACI,sCACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAEA,4BAEQyC,EAAWf,KAAK,SAAAnB,GAEZ,OAAO,kBAAC,EAAD,CAASgC,IAAMhC,EACVA,SAAWA,U,MCb/CmC,IAASC,OACR,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.3253fb2b.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setCategories( category => [inputValue, ...category]);\r\n        setInputValue('');\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input\r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ url } alt={ title } />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","export const getGif = async ( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=DYYqAib4o9HU8WHhZIGX5HiZlbDWumdW&q=${ encodeURI(category) }&limit=10`;\r\n    // const url = 'https://api.giphy.com/v1/gifs/search?api_key=DYYqAib4o9HU8WHhZIGX5HiZlbDWumdW&q=Pokemon&limit=10'; // Se cambiÃ³ el API_KEY\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id:     img.id,\r\n            title:  img.title,\r\n            url:    img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","// import React, { useState, useEffect } from 'react';\r\nimport React from 'react';\r\nimport { GifGridItem } from './GifGridItem'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n// import { getGif } from '../helpers/getGifs';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    // const [images, setImages] = useState([]);\r\n    const { data:images, loading } = useFetchGifs(category);\r\n\r\n    // // renderizar solo una vez este elemento\r\n    // useEffect( () => {\r\n    //     getGif(category)\r\n    //         .then( img => setImages(img));\r\n    // }, [category])\r\n\r\n    // getGif();\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\r\n            { loading && <p className=\"animate__animated animate__flash\">Cargando...</p> }\r\n            <div className=\"card-grid\">            \r\n                {\r\n                    images.map( img => {\r\n                        return <GifGridItem key={ img.id }\r\n                                            { ...img }\r\n                                />\r\n                    })\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}","import { useState, useEffect } from 'react';\r\nimport { getGif } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGif(category)\r\n            .then( img => {\r\n\r\n                setTimeout( () => {\r\n                    setState({\r\n                        data: img,\r\n                        loading: false\r\n                    })\r\n                }, 1500);\r\n\r\n            })\r\n    }, [category]);\r\n\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Dragon Ball']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifApp</h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr></hr>\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => {\r\n                        // return <li key={ category }> { category }</li>\r\n                        return <GifGrid key={ category }\r\n                                    category={ category } />\r\n                    })\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { GifApp } from './GifApp';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n\t<GifApp />,\r\n\tdocument.getElementById('root')\r\n);"],"sourceRoot":""}